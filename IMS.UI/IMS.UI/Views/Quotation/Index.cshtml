@using PagedList;
@using PagedList.Mvc;
@model IPagedList<IMS.DataModel.ViewModels.QuotationViewModels>
@{
    int sl = 0; ViewBag.Title = "Quotation";
}
<table class="table">
    <tr>
        <td>
            <h4 class="panel-title">
                Quotation List
            </h4>
        </td>
        <td align="right">
            <a id="customernew" class="btn btn-default" href="/Quotation/Create">
                <i class="glyphicon glyphicon-new-window"></i> New
            </a>

            <a onclick="fnLeftMenu(this); return false;" id="quotationnew" class="btn btn-default" href="#">
                <i class="glyphicon glyphicon-export"></i> Export
            </a>
        </td>
    </tr>
</table>
<div class="panel-group">
    <div class="panel panel-default">
       
            <table class="table table-striped table-hover table-condensed table-bordered">
                <tr>
                    <th>
                        @Html.ActionLink("QUOTATION CODE", "Index", new { sOdr = ViewBag.CodeSort })
                    </th>
                    <th>
                        @Html.DisplayName("QUOTE_NUMBER")
                    </th>
                    <th>
                        @Html.ActionLink("CUSTOMER", "Index", new { sOdr = ViewBag.CustSort })
                    </th>
                    <th>
                        @Html.DisplayName("CUSTOMER_CONT_PERSON")
                    </th>
                    <th>
                        @Html.DisplayName("QUOTE_DATE")
                    </th>
                    <th>
                        @Html.DisplayName("QUOTE_VALIDITY")
                    </th>
                    <th>
                        @Html.DisplayName("CURRENCY_CODE")
                    </th>
                    <th>
                        @Html.DisplayName("SALES_AGENT")
                    </th>
                    <th>
                        @Html.DisplayName("LEAD_TIME")
                    </th>
                    <th>
                        @Html.DisplayName("STATUS")
                    </th>
                    <th>ACTION</th>
                </tr>

                @foreach (var item in Model)
                {
                <tr>
                    <td>
                        @Html.HiddenFor(modelItem => item.QUOTE_ID)
                        @Html.DisplayFor(modelItem => item.QUOTE_CODE)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.QUOTE_NUMBER)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CUST_ID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CUSTOMER_CONTACT_PERSON)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.QUOTE_DATE)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.QUOTE_VALIDITY)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CURRENCY_CODE)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SALES_AGENT)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LEAD_TIME)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ISACTIVE)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.QUOTE_ID }) |
                        @Html.ActionLink("Details", "Details", new { id = item.QUOTE_ID }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.QUOTE_ID })
                    </td>
                </tr>
                }
            </table>
            @if (Model.Count() > 0)
            {
            <table align="right">
                <tr>
                    <td>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount  </td>
                    <td width="10px"></td>
                    <td>
                        @Html.PagedListPager(Model, page => Url.Action("Index", "Quotation", new { page, sOdr = ViewBag.CurrentSort }))
                    </td>
                </tr>
            </table>
            }
            else {
                <table align="center">
                    <tr>
                        <td align="right" class="text-danger" style="font-size:large">No record(s) found.</td>
                    </tr>
                </table>
            }
    </div>
</div>