@using PagedList;
@using PagedList.Mvc;
@model IPagedList<IMS.DataModel.ViewModels.RFQViewModels>
@{
    int sl = 0; ViewBag.Title = "RFQ";
}
<table class="table">
    <tr>
        <td>
            <h4 class="panel-title">
                RFQ List
            </h4>
        </td>
        <td align="right">
            <a id="customernew" class="btn btn-default" href="/Quotation/RFQCreate">
                <i class="glyphicon glyphicon-new-window"></i> New
            </a>

            <a onclick="fnLeftMenu(this); return false;" id="quotationnew" class="btn btn-default" href="#">
                <i class="glyphicon glyphicon-export"></i> Export
            </a>
        </td>
    </tr>
</table>

<table class="table table-striped table-hover table-condensed table-bordered">
    <tr>
        <th>#</th>
        <th>
            @Html.DisplayName("RFQ NO")
        </th>
        <th>
            @Html.ActionLink("RFQ NAME", "RFQIndex", new { sOdr = ViewBag.NameSort })
        </th>
        <th>
            @Html.DisplayName("RFQ DESC")
        </th>
        <th>
            @Html.ActionLink("RFQ DATE", "RFQIndex", new { sOdr = ViewBag.DateSort })
        </th>
        <th>
            @Html.DisplayName("DUE DATE")
        </th>
        @*<th>
            @Html.DisplayName("PRODUCT")
        </th>*@
        <th>
            @Html.DisplayName("QUANTITY")
        </th>
        <th>
            @Html.DisplayName("UNIT PRICE")
        </th>
        <th>
            STATUS
        </th>
        <th colspan="3">ACTION</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>@(sl = sl + 1) </td>
            <td>
                @Html.HiddenFor(modelItem => item.RFQ_ID)
                @Html.DisplayFor(modelItem => item.RFQ_NO)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RFQ_NAME)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RFQ_DESC)
            </td>
            <td>
                @(item.RFQ_DATE != null ? (item.RFQ_DATE.Value.ToString("dd-MMM-yyyy")) : "")
            </td>
            <td>
                @(item.DUE_DATE != null ? (item.DUE_DATE.Value.ToString("dd-MMM-yyyy")) : "")
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.PRODUCT_ID)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.QUANTITY)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UNIT_PRICE)
            </td>
            <td>
                @(item.ISACTIVE==true ? "Active" : "In-Active")
            </td>
            <td>
                <p data-placement="top" data-toggle="tooltip" title="Details">
                    <a href="@Url.Action("RFQDetails", "Quotation", new { id = item.RFQ_ID,p=Model.PageNumber })" class="btn btn-info btn-xs" id="btnRFQDetails" value="@item.RFQ_ID">
                        <span class="glyphicon glyphicon-list"></span>
                    </a>
                </p>
            </td>
            <td>
                <p data-placement="top" data-toggle="tooltip" title="Edit">
                    <a href="@Url.Action("RFQEdit", "Quotation", new { id = item.RFQ_ID,p= Model.PageNumber })" id="btnRFQEdit" value="@item.RFQ_ID" class="btn btn-primary btn-xs">
                        <span class="glyphicon glyphicon-pencil"></span>
                    </a>
                </p>
            </td>

            <td>
                <p data-placement="top" data-toggle="tooltip" title="Active/Inactive">
                    <a href="@Url.Action("RFQDelete", "Quotation", new { id = item.RFQ_ID,p= Model.PageNumber })" class="btn btn-danger btn-xs" id="btnJobDelete" value="@item.RFQ_ID">
                        <span class="glyphicon glyphicon-remove"></span>
                    </a>
                </p>
            </td>
            </tr>
    }

</table>
@if (Model.Count() > 0)
{
    <table align="right">
        <tr>
            <td>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount  </td>
            <td width="10px"></td>
            <td>
                @Html.PagedListPager(Model, page => Url.Action("RFQIndex", "Quotation", new { page, sOdr = ViewBag.CurrentSort }))
            </td>
        </tr>
    </table>
}
else {
    <table align="center">
        <tr>
            <td align="right" class="text-danger" style="font-size:large">No record(s) found.</td>
        </tr>
    </table>
}
